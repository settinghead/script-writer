import { z } from 'zod';
import { JsondocReferencesSchema } from './schemas/common';

// =================================================================================
// INPUT SCHEMAS (Represents the "params" for a transform)
// =================================================================================

/**
 * Defines the input parameters for the brainstorming/ideation transform.
 * This schema validates the data provided by the user to generate story ideas.
 */
export const IdeationInputSchema = z.object({
  jsondocs: JsondocReferencesSchema.describe('引用的jsondoc列表，包含头脑风暴参数等'),
  otherRequirements: z.string().describe('其他要求，如故事类型、内容、故事风格等'),
});

/**
 * Type helper for the ideation input parameters.
 */
export type IdeationInput = z.infer<typeof IdeationInputSchema>;


// =================================================================================
// OUTPUT SCHEMAS (Represents the "data" of an output jsondoc)
// =================================================================================

/**
 * Defines the structure of a single story idea generated by the LLM.
 */
const StoryIdeaSchema = z.object({
  title: z.string().nonempty({ message: '标题不能为空' }).describe('故事标题，简洁有吸引力，通常15-30个字符'),
  body: z.string().nonempty({ message: '故事梗概不能为空' }).describe('故事详细内容，包含主要情节、人物关系、冲突和发展，通常200-500个字符'),
});

/**
 * Defines the output for the brainstorming/ideation transform.
 * It's expected to be an array of story ideas.
 */
export const IdeationOutputSchema = z.array(StoryIdeaSchema);

/**
 * Type helper for the ideation output.
 */
export type IdeationOutput = z.infer<typeof IdeationOutputSchema>;


// =================================================================================
// TRANSFORM SCHEMAS (Tying inputs and outputs together)
// =================================================================================

/**
 * Represents a complete, validated transform for ideation,
 * combining the validated input parameters and the expected output structure.
 */
export const IdeationTransformSchema = z.object({
  input: IdeationInputSchema,
  output: IdeationOutputSchema,
}); 