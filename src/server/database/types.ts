/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Numeric = ColumnType<string, number | string, number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Artifacts {
  created_at: Generated<Timestamp>;
  data: string;
  id: string;
  metadata: string | null;
  origin_type: string;
  project_id: string;
  schema_type: string;
  schema_version: string;
  streaming_status: Generated<string | null>;
  updated_at: Generated<Timestamp>;
}

export interface ArtifactYjsAwareness {
  artifact_id: string;
  client_id: string;
  created_at: Generated<Timestamp | null>;
  project_id: Generated<string>;
  room_id: string;
  update: Buffer;
  updated_at: Generated<Timestamp | null>;
}

export interface ArtifactYjsDocuments {
  artifact_id: string;
  created_at: Generated<Timestamp | null>;
  document_state: Buffer;
  id: Generated<number>;
  project_id: Generated<string>;
  room_id: string;
  updated_at: Generated<Timestamp | null>;
}

export interface AuthProviders {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  provider: string;
  provider_data: string | null;
  provider_id: string;
  user_id: string;
}

export interface ChatMessagesDisplay {
  content: string;
  created_at: Generated<Timestamp>;
  display_type: Generated<string | null>;
  id: string;
  project_id: string;
  raw_message_id: string | null;
  role: string;
  status: Generated<string | null>;
  updated_at: Generated<Timestamp>;
}

export interface ChatMessagesRaw {
  content: string;
  created_at: Generated<Timestamp>;
  id: string;
  metadata: Json | null;
  project_id: string;
  role: string;
  tool_name: string | null;
  tool_parameters: Json | null;
  tool_result: Json | null;
  updated_at: Generated<Timestamp>;
}

export interface HumanTransforms {
  action_type: string;
  change_description: string | null;
  derivation_path: Generated<string | null>;
  derived_artifact_id: string | null;
  interface_context: string | null;
  project_id: string;
  source_artifact_id: string | null;
  transform_id: string;
  transform_name: string | null;
}

export interface LlmPrompts {
  id: string;
  project_id: string;
  prompt_role: Generated<string | null>;
  prompt_text: string;
  transform_id: string;
}

export interface LlmTransforms {
  model_name: string;
  model_parameters: string | null;
  project_id: string;
  raw_response: string | null;
  token_usage: string | null;
  transform_id: string;
}

export interface Projects {
  created_at: Generated<Timestamp>;
  description: string | null;
  id: string;
  name: string;
  project_type: Generated<string | null>;
  status: Generated<string | null>;
  updated_at: Generated<Timestamp>;
}

export interface ProjectsUsers {
  id: Generated<number>;
  joined_at: Generated<Timestamp>;
  project_id: string;
  role: Generated<string | null>;
  user_id: string;
}

export interface TransformInputs {
  artifact_id: string;
  artifact_path: Generated<string>;
  id: Generated<number>;
  input_role: string | null;
  project_id: string;
  transform_id: string;
}

export interface TransformOutputs {
  artifact_id: string;
  id: Generated<number>;
  output_role: string | null;
  project_id: string;
  transform_id: string;
}

export interface Transforms {
  created_at: Generated<Timestamp>;
  error_message: string | null;
  execution_context: string | null;
  id: string;
  max_retries: Generated<number | null>;
  progress_percentage: Numeric | null;
  project_id: string;
  retry_count: Generated<number | null>;
  status: Generated<string | null>;
  streaming_status: string | null;
  type: string;
  type_version: Generated<string>;
  updated_at: Generated<Timestamp>;
}

export interface Users {
  created_at: Generated<Timestamp>;
  email: string | null;
  id: string;
  updated_at: Generated<Timestamp>;
  username: string;
}

export interface UserSessions {
  created_at: Generated<Timestamp>;
  expires_at: Timestamp;
  id: string;
  user_id: string;
}

export interface DB {
  artifact_yjs_awareness: ArtifactYjsAwareness;
  artifact_yjs_documents: ArtifactYjsDocuments;
  artifacts: Artifacts;
  auth_providers: AuthProviders;
  chat_messages_display: ChatMessagesDisplay;
  chat_messages_raw: ChatMessagesRaw;
  human_transforms: HumanTransforms;
  llm_prompts: LlmPrompts;
  llm_transforms: LlmTransforms;
  projects: Projects;
  projects_users: ProjectsUsers;
  transform_inputs: TransformInputs;
  transform_outputs: TransformOutputs;
  transforms: Transforms;
  user_sessions: UserSessions;
  users: Users;
}
