# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name miguang.zztech.io;
    
    # Let's Encrypt challenge location (keep for renewals)
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    server_name miguang.zztech.io;
    client_max_body_size 220M;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/miguang.zztech.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/miguang.zztech.io/privkey.pem;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Frontend (H5 web application) - served directly by nginx
    location / {
        root /var/www/script-writer-current/dist-client;
        try_files $uri $uri/ /index.html;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
    }

    # Backend API - proxy to Caddy
    location /api {
        proxy_pass https://localhost:4610;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SSL verification for Caddy (self-signed cert)
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
    }

    # Proxy Auth requests to Caddy
    location /auth/ {
        proxy_pass https://localhost:4610;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SSL verification for Caddy (self-signed cert)
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
    }

    # WebSocket support for YJS - proxy to Caddy
    location /yjs {
        proxy_pass https://localhost:4610;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400; # 24h - WebSocket connections can be long-lived
        
        # SSL verification for Caddy (self-signed cert)
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
    }
}
